spring:
    jpa:
        generate-ddl: true  # 自动生成DDL
        defer-datasource-initialization: true  # 延迟数据源初始化，确保表先创建
        show-sql: false  # 测试环境关闭SQL日志输出
        hibernate:
            ddl-auto: update  # 自动更新表结构（如果表不存在会自动创建）
        properties:
            hibernate.auto_quote_keyword: true
            hibernate.hbm2ddl.auto: update
    application:
        name: gpu_rentaler_0_test
    datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        # 测试环境数据库配置，支持环境变量覆盖
        # createDatabaseIfNotExist=true 会自动创建数据库（如果不存在）
        url: ${SPRING_DATASOURCE_URL:jdbc:mysql://127.0.0.1:3306/gpu_rentaler_0_test?characterEncoding=utf8&serverTimezone=Asia/Shanghai&createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true}
        username: ${SPRING_DATASOURCE_USERNAME:root}
        password: ${SPRING_DATASOURCE_PASSWORD:123456}
        # 连接池配置
        hikari:
            maximum-pool-size: 10
            minimum-idle: 5
            connection-timeout: 30000
            idle-timeout: 600000
            max-lifetime: 1800000
    sql:
        init:
            encoding: utf8
            data-locations: classpath:data.sql  # 数据初始化脚本
            mode: always  # 总是执行SQL脚本
            continue-on-error: true  # 遇到错误继续执行
    data:
        web:
            pageable:
                one-indexed-parameters: true
    servlet:
        multipart:
            max-file-size: 1000GB
            max-request-size: 1000GB

server:
    servlet:
        context-path: /admin3
    port: ${SERVER_PORT:9094}  # 测试环境使用不同端口，避免与开发环境冲突

# 日志配置
logging:
    level:
        root: INFO
        com.gpu.rentaler: DEBUG
        org.springframework: INFO
        org.hibernate: INFO
    pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
        file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

grpc:
    server:
        port: ${GRPC_PORT:50053}  # 测试环境使用不同的gRPC端口
        enableReflection: true
        maxInboundMessageSize: 1GB
